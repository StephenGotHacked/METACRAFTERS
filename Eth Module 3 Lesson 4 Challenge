// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

/*
This is for Looping
contract Loop {
    function looping(uint Loops)public pure returns(uint) {
        for (uint i = Loops; i<=1000; i++){
        }return Loops;
    }   
}
*/

contract Ch4Metacrafters{
    function addition(uint num1, uint num2) external pure returns(uint){
        return num1 + num2;
    }

     function subtraction (uint num1, uint num2) external pure returns(uint){
        return num1 - num2;
    }

     function multiplication(uint num1, uint num2) external pure returns(uint){
        return num1 * num2;
    }

     function division(uint num1, uint num2) external pure returns(uint){
        return num1 / num2;
    }
}
